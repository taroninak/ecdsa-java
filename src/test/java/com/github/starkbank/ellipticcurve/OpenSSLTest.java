package com.github.starkbank.ellipticcurve;

import org.junit.Test;

import java.io.IOException;
import java.net.URISyntaxException;

import static com.github.starkbank.ellipticcurve.Utils.readFileAsBytes;
import static com.github.starkbank.ellipticcurve.Utils.readFileAsString;
import static org.junit.Assert.assertTrue;

/**
 * Created on 17-Jan-19
 *
 * @author Taron Petrosyan
 */
public class OpenSSLTest {

    @Test
    public void testAssign() throws URISyntaxException, IOException {
//  Generated by:openssl ecparam -name secp256k1 - genkey - out privateKey.pem

        String privateKeyPem = readFileAsString("privateKey.pem");

        PrivateKey privateKey = PrivateKey.fromPem(privateKeyPem);

        String message = readFileAsString("message.txt");

        Signature signature = Ecdsa.sign(message, privateKey);

        PublicKey publicKey = privateKey.publicKey();

        assertTrue(Ecdsa.verify(message, signature, publicKey));
    }

    @Test
    public void testVerifySignature() throws IOException, URISyntaxException {
//        openssl ec -in privateKey.pem - pubout - out publicKey.pem
        String publicKeyPem = readFileAsString("publicKey.pem");
//        openssl dgst -sha256 -sign privateKey.pem -out signature.binary message.txt
        ByteString signatureBin = new ByteString(readFileAsBytes("signature.binary"));

        String message = readFileAsString("message.txt");

        PublicKey publicKey = PublicKey.fromPem(publicKeyPem);

        Signature signature = Signature.fromDer(signatureBin);

        assertTrue(Ecdsa.verify(message, signature, publicKey));
    }

}
